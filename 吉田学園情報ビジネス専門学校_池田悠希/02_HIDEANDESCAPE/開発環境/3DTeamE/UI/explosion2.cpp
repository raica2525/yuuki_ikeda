//=============================================================================
//
// 爆発(パーティクル)処理 [explosio2.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "explosion2.h"
#include "manager.h"
#include "renderer.h"

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CExplosion2::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CExplosion2::CExplosion2()
{
	m_pos = ZEROVECTOR3;
	m_move = ZEROVECTOR3;
	m_rot = ZEROVECTOR3;
	m_size = ZEROVECTOR3;
	m_col = D3DCOLOR_RGBA(255, 255, 255, 255);
}

//=============================================================================
// デストラクタ
//=============================================================================
CExplosion2::~CExplosion2()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CExplosion2::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,				// デバイスへのポインタ
		EXPLOSION2_TEXTURE,								// ファイルの名前
		&m_pTexture);								// 読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CExplosion2::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成関数
//=============================================================================
CExplosion2 * CExplosion2::Create(D3DXVECTOR3 pos, D3DXVECTOR3 move, D3DXVECTOR3 rot, D3DXVECTOR3 size, D3DXCOLOR col)
{
	CExplosion2* pExplosion2 = NULL;
	pExplosion2 = new CExplosion2;
	pExplosion2->m_pos = pos;
	pExplosion2->m_move = move;
	pExplosion2->m_rot = rot;
	pExplosion2->m_size = size;
	pExplosion2->m_col = col;
	pExplosion2->Init();

	return pExplosion2;
}

//=============================================================================
// 初期化関数
//=============================================================================
HRESULT CExplosion2::Init(void)
{
	CBillboard::Init();
	SetPos(m_pos);
	SetSize(m_size);
	SetColor(D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f));
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了関数
//=============================================================================
void CExplosion2::Uninit(void)
{
	CBillboard::Uninit();
}

//=============================================================================
// 更新関数
//=============================================================================
void CExplosion2::Update(void)
{
	CBillboard::Update();
	//テクスチャセット
}

//=============================================================================
// 描画関数
//=============================================================================
void CExplosion2::Draw(void)
{
	CBillboard::Draw();
}
