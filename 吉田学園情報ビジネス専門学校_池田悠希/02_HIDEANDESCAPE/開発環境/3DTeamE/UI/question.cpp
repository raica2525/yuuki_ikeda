//=============================================================================
//
// Qマーク処理 [question.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "question.h"
#include "renderer.h"
#include "manager.h"

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CQuestion::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CQuestion::CQuestion()
{
	m_pos = ZEROVECTOR3;
	m_size = ZEROVECTOR3;
	m_col = D3DCOLOR_RGBA(255, 255, 255, 255);
}

//=============================================================================
// デストラクタ
//=============================================================================
CQuestion::~CQuestion()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CQuestion::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,				// デバイスへのポインタ
		QUESTIONMARK_TEXTURE,								// ファイルの名前
		&m_pTexture);								// 読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CQuestion::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成関数
//=============================================================================
CQuestion * CQuestion::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 size)
{
	CQuestion* pQuestion = NULL;
	pQuestion = new CQuestion;
	pQuestion->m_pos = pos;
	pQuestion->m_size = size;
	pQuestion->Init();

	return pQuestion;
}

//=============================================================================
// 初期化関数
//=============================================================================
HRESULT CQuestion::Init(void)
{
	CBillboard::Init();
	SetPos(m_pos);
	SetSize(m_size);
	SetColor(m_col);
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了関数
//=============================================================================
void CQuestion::Uninit(void)
{
	CBillboard::Uninit();
}

//=============================================================================
// 更新関数
//=============================================================================
void CQuestion::Update(void)
{
	CBillboard::Update();

	//テクスチャのセット
	SetTex(
		0.0f,
		0.0f,
		1.0f,
		1.0f);
}

//=============================================================================
// 描画関数
//=============================================================================
void CQuestion::Draw(void)
{
	CBillboard::Draw();
}
